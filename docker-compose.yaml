services:
  postgres:
    image: postgres:latest
    container_name: postgres_container_post
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: users_pastbin_db
    ports:
      - "5432:5432"
  zookeeper:
    image: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - kafka-network
  kafka:
    depends_on:
      - zookeeper
    image: wurstmeister/kafka
    ports:
      - "9095:9094"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://kafka:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://localhost:9095
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT

      KAFKA_CREATE_TOPICS: "posts"
    networks:
      - kafka-network
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui-2
    ports:
      - "8080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    links:
      - kafka
      - zookeeper
    networks:
      - kafka-network
  note:
    container_name: "notifications_service"
    build:
      context: ./notifications_service
      dockerfile: DockerFileNote
    ports:
      - "8084:8084"
    networks:
      - kafka-network
    depends_on:
      - postgres
      - kafka
  user_service:
    container_name: "user_service"
    build:
      context: ./user_service
      dockerfile: DockerFileUser
    networks:
      - kafka-network
    ports:
      - "8082:8082"
    depends_on:
      - postgres
  post_service:
    container_name: "post_service"
    build:
      context: ./post_service
      dockerfile: DockerFilePost
    ports:
      - "8083:8083"
    networks:
      - kafka-network
    depends_on:
      - postgres
      - kafka
networks:
  kafka-network:
    driver: bridge